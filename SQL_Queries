-- Q1: Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.
-- Query
SELECT DISTINCT (market) 
FROM dim_customer  
WHERE   customer = 'Atliq Exclusive'      
AND region = 'APAC';

-- Q2 What is the percentage of unique product increase in 2021 vs. 2020? 
-- The final output contains these fields
-- unique_products_2020
-- unique_products_2021
-- percentage_chg

-- Query
WITH product_counts AS (
    SELECT 
        COUNT(DISTINCT CASE WHEN fiscal_year = 2020 THEN product_code END) AS unique_products_2020,
        COUNT(DISTINCT CASE WHEN fiscal_year = 2021 THEN product_code END) AS unique_products_2021
    FROM fact_sales_monthly
)

SELECT  
    unique_products_2020,
    unique_products_2021,
    ROUND(
        ((unique_products_2021 - unique_products_2020) / unique_products_2020) * 100, 
        2
    ) AS percentage_chg
FROM product_counts;

-- 3. Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. The final output contains 2 fields,
-- segment
-- product_count

-- Query
SELECT 
    segment,
    COUNT(DISTINCT product_code) AS product_count
FROM 
    dim_product
GROUP BY 
    segment
ORDER BY 
    product_count DESC;

-- Q4. Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? 
-- The final output contains these fields, 
-- segment 
-- product_count_2020 
-- product_count_2021 
-- difference

-- Query
WITH product_counts AS (
    SELECT 
        p.segment,
        COUNT(DISTINCT CASE WHEN fiscal_year = 2020 THEN s.product_code END) AS unique_product_code_20,
        COUNT(DISTINCT CASE WHEN fiscal_year = 2021 THEN s.product_code END) AS unique_product_code_21
    FROM 
        fact_sales_monthly s
    JOIN 
        dim_product p 
        ON s.product_code = p.product_code
    GROUP BY 
        p.segment
)

SELECT  
    segment,
    unique_product_code_20,
    unique_product_code_21,
    unique_product_code_21 - unique_product_code_20 AS difference
FROM 
    product_counts
ORDER BY 
    difference DESC;


-- 5. Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields,
-- product_code
-- product
-- manufacturing_cost

-- Query

SELECT
    m.product_code,
    p.product,
    ROUND(m.manufacturing_cost, 2) AS manufacturing_cost
FROM 
    fact_manufacturing_cost m
JOIN 
    dim_product p 
    ON m.product_code = p.product_code
WHERE 
    m.manufacturing_cost = (SELECT MAX(manufacturing_cost) FROM fact_manufacturing_cost)
    OR 
    m.manufacturing_cost = (SELECT MIN(manufacturing_cost) FROM fact_manufacturing_cost);

-- 6. Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the  Indian market
-- The final output contains these fields,
-- customer_code
-- customer
-- average_discount_percentage

-- Query
SELECT
    p.customer_code,
    c.customer,
    ROUND(AVG(p.pre_invoice_discount_pct) * 100, 2) AS average_discount_percentage
FROM fact_pre_invoice_deductions p
JOIN dim_customer c 
    ON p.customer_code = c.customer_code
WHERE p.fiscal_year = 2021
  AND c.market = 'India'
GROUP BY p.customer_code, c.customer
ORDER BY average_discount_percentage DESC
LIMIT 5;

-- 7. Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. This analysis helps to get an idea of low and
-- high-performing months and take strategic decisions.
-- The final report contains these columns:
-- Month
-- Year
-- Gross sales Amount

-- Query
WITH sales_data AS (
    SELECT 
        s.date,
        MONTHNAME(s.date) AS month_name,
        s.fiscal_year,
        g.gross_price,
        s.sold_quantity,
        c.customer
    FROM fact_sales_monthly s
    JOIN fact_gross_price g 
        ON s.product_code = g.product_code 
    JOIN dim_customer c 
        ON s.customer_code = c.customer_code
    WHERE c.customer = 'Atliq Exclusive'
)

SELECT 
    month_name,
    fiscal_year,
    SUM(ROUND(gross_price * sold_quantity, 2)) AS Gross_sales_Amount
FROM sales_data
GROUP BY month_name, fiscal_year;

-- Q8. In which quarter of 2020, got the maximum total_sold_quantity? 
-- The final output contains these fields sorted by the total_sold_quantity,
-- Quarter 
-- total_sold_quantity

-- Query
WITH quarter_data AS (
    SELECT 
        CASE 
            WHEN MONTH(date) IN (9, 10, 11) THEN 'Q1'
            WHEN MONTH(date) IN (12, 1, 2) THEN 'Q2'
            WHEN MONTH(date) IN (3, 4, 5) THEN 'Q3'
            ELSE 'Q4'
        END AS quarter,
        sold_quantity
    FROM fact_sales_monthly
    WHERE fiscal_year = 2020
)

SELECT 
    quarter,
    ROUND(SUM(sold_quantity) / 1000000, 2) AS total_sold_quantity
FROM quarter_data
GROUP BY quarter
ORDER BY total_sold_quantity DESC;

-- Q9. Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? 
-- The final output contains these fields, 
-- channel 
-- gross_sales_mln 
-- percentage

-- Query
WITH channel_sales AS (
    SELECT 
        c.channel,
        SUM(g.gross_price * s.sold_quantity) / 1000000 AS gross_sales_mln
    FROM 
        fact_sales_monthly s
    JOIN 
        fact_gross_price g 
        ON s.product_code = g.product_code 
        AND s.fiscal_year = g.fiscal_year
    JOIN 
        dim_customer c 
        ON s.customer_code = c.customer_code
    WHERE 
        s.fiscal_year = 2021
    GROUP BY 
        c.channel
)

SELECT 
    channel,
    gross_sales_mln,
    ROUND(gross_sales_mln * 100 / SUM(gross_sales_mln) OVER (), 2) AS percentage_of_contribution
FROM  channel_sales;

-- Q10. Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? 
-- The final output contains these fields, 
-- division 
-- product_code

-- Query
WITH product_sales AS (
    SELECT 
        d.division,
        s.product_code,
        d.product,
        d.variant,
        round(SUM(s.sold_quantity),2) AS total_sold_quantity,
        DENSE_RANK() OVER (PARTITION BY d.division ORDER BY SUM(s.sold_quantity) DESC) AS rank_order
    FROM 
        fact_sales_monthly s
    JOIN 
        dim_product d 
        ON s.product_code = d.product_code
    WHERE 
        s.fiscal_year = 2021
    GROUP BY 
        d.division, s.product_code,
        d.product, d.variant
)

SELECT 
    division,
    product_code,
    product,
    variant,
    total_sold_quantity,
    rank_order
FROM product_sales
WHERE 
rank_order <= 3
ORDER BY 
    division, rank_order;











